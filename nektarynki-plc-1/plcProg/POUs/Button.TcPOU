<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="Button" Id="{aec94d50-ff8e-4733-83a7-9ffb2f475799}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Button

VAR CONSTANT
	MAX_OUTPUTS_PER_LEVEL : INT := 3;
END_VAR

VAR_INPUT
	digitalInput : REFERENCE TO BOOL;
	
	small_outputs : REFERENCE TO ARRAY[1..MAX_OUTPUTS_PER_LEVEL] OF BOOL;
	medium_outputs : REFERENCE TO ARRAY[1..MAX_OUTPUTS_PER_LEVEL] OF BOOL;
	big_outputs : REFERENCE TO ARRAY[1..MAX_OUTPUTS_PER_LEVEL] OF BOOL;
	superstrong_outputs : REFERENCE TO ARRAY[1..MAX_OUTPUTS_PER_LEVEL] OF BOOL;
	
	levelsManaged : INT := 3;
	
	defaultDayOutput : E_OutputLevel;
	defaultNightOutput : E_OutputLevel;
END_VAR

VAR
	wasRecentlyActive : BOOL := FALSE;

	press : R_TRIG;
	release : F_TRIG;
	smallOutputTimer : TON := (PT := T#1S);
	mediumOutputTimer : TON := (PT := T#2S); 
	bigOutputTimer : TON := (PT := T#3S); 
	superStrongOutputTimer : TON := (PT := T#4S);
	
	doublePressTimer : TON := (PT := T#1000MS);
	inactivityTimeout : TP := (PT := T#500MS);
	
	initialized : BOOL := FALSE;
	isOn : BOOL := FALSE;
		
	smallOutputsSet : BOOL := FALSE;
	mediumOutputsSet : BOOL := FALSE;
	bigOutputsSet: BOOL := FALSE;
	superStrongOutputsSet: BOOL := FALSE;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT initialized THEN
	initialized := TRUE;	
END_IF


]]></ST>
    </Implementation>
    <Method Name="listen" Id="{8ef97f03-9ee7-4fed-a21d-d7d2049ac2bc}">
      <Declaration><![CDATA[METHOD listen
VAR_INPUT
END_VAR

VAR
	number : DINT;
	boool : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[press(CLK:= digitalInput);
release(CLK:= digitalInput);
smallOutputTimer(IN := digitalInput);
mediumOutputTimer(IN := digitalInput);
bigOutputTimer(IN := digitalInput);
superStrongOutputTimer(IN := digitalInput);
doublePressTimer(IN := digitalInput);
inactivityTimeout(IN := digitalInput);

HMI.led1_1 := MAIN.arr1[1];
HMI.led2_1 := MAIN.arr2[1]; 
HMI.led2_2 := MAIN.arr2[2];
HMI.led3 := MAIN.arr3[1];
HMI.led4_1 := MAIN.arr4[1]; 
HMI.led4_2 := MAIN.arr4[2]; 
HMI.led4_3 := MAIN.arr4[3];
			
IF wasRecentlyActive AND NOT digitalInput AND NOT inactivityTimeout.Q THEN
	wasRecentlyActive := FALSE;
	smallOutputsSet := FALSE;
	mediumOutputsSet := FALSE;
	bigOutputsSet := FALSE;
	superStrongOutputsSet := FALSE;
	ADSLOGSTR(msgCtrlMask := ADSLOG_MSGTYPE_ERROR OR ADSLOG_MSGTYPE_LOG,msgFmtStr := 'activity timeout',strArg := '');
END_IF

IF press.Q THEN
	ADSLOGSTR(msgCtrlMask := ADSLOG_MSGTYPE_ERROR OR ADSLOG_MSGTYPE_LOG,msgFmtStr := 'button pressed',strArg := '');
	IF wasRecentlyActive THEN
		ADSLOGSTR(msgCtrlMask := ADSLOG_MSGTYPE_ERROR OR ADSLOG_MSGTYPE_LOG,msgFmtStr := 'turn ON strongest as double press',strArg := '');
		turnOnStrongestOutput();
	ELSE
		IF isON THEN
			ADSLOGSTR(msgCtrlMask := ADSLOG_MSGTYPE_ERROR OR ADSLOG_MSGTYPE_LOG,msgFmtStr := 'lights turned off',strArg := '');
			turnOff();
		ELSE
			turnOnDefault();
		END_IF
	END_IF
	wasRecentlyActive := TRUE;
END_IF

IF release.Q THEN
	ADSLOGSTR(msgCtrlMask := ADSLOG_MSGTYPE_ERROR OR ADSLOG_MSGTYPE_LOG,msgFmtStr := 'button released',strArg := '');
END_IF

manageLongPress();]]></ST>
      </Implementation>
    </Method>
    <Method Name="manageLongPress" Id="{9f04a0be-cdbd-4dba-be58-f2a3e3154f07}">
      <Declaration><![CDATA[METHOD manageLongPress
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF smallOutputTimer.Q THEN
	IF NOT smallOutputsSet THEN
		setOutputs(outputLevel := E_OutputLevel.small, state := TRUE);
		smallOutputsSet := TRUE;
		isOn := TRUE;
	END_IF
END_IF

IF mediumOutputTimer.Q THEN
	IF NOT mediumOutputsSet THEN
		setOutputs(outputLevel := E_OutputLevel.medium, state := TRUE);
		mediumOutputsSet := TRUE;
		isOn := TRUE;
	END_IF
END_IF

IF bigOutputTimer.Q THEN
	IF NOT bigOutputsSet THEN
		setOutputs(outputLevel := E_OutputLevel.big, state := TRUE);
		bigOutputsSet := TRUE;
		isOn := TRUE;
	END_IF
END_IF

IF superStrongOutputTimer.Q THEN
	IF NOT superStrongOutputsSet THEN
		setOutputs(outputLevel := E_OutputLevel.superstrong, state := TRUE);
		superStrongOutputsSet := TRUE;
		isOn := TRUE;
	END_IF
END_IF

]]></ST>
      </Implementation>
    </Method>
    <Method Name="setOutputs" Id="{98f0d494-d3da-4ed5-b4b3-67a830019a2c}">
      <Declaration><![CDATA[METHOD setOutputs
VAR_INPUT
	outputLevel : E_OutputLevel;
	state : BOOL;
END_VAR

VAR
	i : INT;
	levelAsText : STRING := 'abc';
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[levelAsText := TO_STRING(outputLevel);
ADSLOGSTR(msgCtrlMask := ADSLOG_MSGTYPE_ERROR OR ADSLOG_MSGTYPE_LOG,msgFmtStr := 'turn ON %s',strArg := levelAsText);

CASE outputLevel OF
	
	E_OutputLevel.small:
		FOR i := 1 TO MAX_OUTPUTS_PER_LEVEL BY 1 DO
			small_outputs[i] := state;
		END_FOR
		
	E_OutputLevel.medium:
		FOR i := 1 TO MAX_OUTPUTS_PER_LEVEL BY 1 DO
			medium_outputs[i] := state;
		END_FOR
		
	E_OutputLevel.big:
		FOR i := 1 TO MAX_OUTPUTS_PER_LEVEL BY 1 DO
			big_outputs[i] := state;
		END_FOR
		
	E_OutputLevel.superstrong:
		FOR i := 1 TO MAX_OUTPUTS_PER_LEVEL BY 1 DO
			superstrong_outputs[i] := state;
		END_FOR
		
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="turnOff" Id="{6af44e6f-dbfa-4c03-a237-33da5be5a32c}">
      <Declaration><![CDATA[METHOD turnOff
VAR_INPUT
END_VAR

VAR 
	i : INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE levelsManaged OF
	1 :
		FOR i := 1 TO MAX_OUTPUTS_PER_LEVEL BY 1 DO
			small_outputs[i] := FALSE;
		END_FOR

	2 :
		FOR i := 1 TO MAX_OUTPUTS_PER_LEVEL BY 1 DO
			small_outputs[i] := FALSE;
			medium_outputs[i] := FALSE;
		END_FOR
	
	3 :
		FOR i := 1 TO MAX_OUTPUTS_PER_LEVEL BY 1 DO
			small_outputs[i] := FALSE;
			medium_outputs[i] := FALSE;
			big_outputs[i] := FALSE;
		END_FOR
		
	4 :
		FOR i := 1 TO MAX_OUTPUTS_PER_LEVEL BY 1 DO
			small_outputs[i] := FALSE;
			medium_outputs[i] := FALSE;
			big_outputs[i] := FALSE;
			superstrong_outputs[i] := FALSE;
		END_FOR

END_CASE

isOn := FALSE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="turnOnDefault" Id="{0b29667d-d1f0-4d16-a335-62900f4a810a}">
      <Declaration><![CDATA[METHOD turnOnDefault
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF MAIN.isDay THEN
	ADSLOGSTR(msgCtrlMask := ADSLOG_MSGTYPE_ERROR OR ADSLOG_MSGTYPE_LOG,msgFmtStr := 'turn ON default: %s for day', strArg := TO_STRING(defaultDayOutput));
	setOutputs(outputLevel := defaultDayOutput, state := TRUE);
ELSE
	ADSLOGSTR(msgCtrlMask := ADSLOG_MSGTYPE_ERROR OR ADSLOG_MSGTYPE_LOG,msgFmtStr := 'turn ON default: %s for night', strArg := TO_STRING(defaultNightOutput));
	setOutputs(outputLevel := defaultNightOutput, state := TRUE);
END_IF

isOn := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="turnOnStrongestOutput" Id="{3f4fabbe-4d13-4779-9909-6746b7be7f4d}">
      <Declaration><![CDATA[METHOD turnOnStrongestOutput
VAR_INPUT
END_VAR

VAR
	i : INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE levelsManaged OF
	1:
		setOutputs(outputLevel := E_OutputLevel.small, state := TRUE);
		
	2:
		setOutputs(outputLevel := E_OutputLevel.medium, state := TRUE);
		
	3:
		setOutputs(outputLevel := E_OutputLevel.big, state := TRUE);
		
	4:
		setOutputs(outputLevel := E_OutputLevel.superstrong, state := TRUE);
		
END_CASE

isOn := TRUE;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="Button">
      <LineId Id="179" Count="0" />
      <LineId Id="182" Count="0" />
      <LineId Id="181" Count="0" />
      <LineId Id="209" Count="0" />
      <LineId Id="208" Count="0" />
      <LineId Id="195" Count="0" />
    </LineIds>
    <LineIds Name="Button.listen">
      <LineId Id="44" Count="0" />
      <LineId Id="74" Count="0" />
      <LineId Id="45" Count="4" />
      <LineId Id="89" Count="0" />
      <LineId Id="111" Count="6" />
      <LineId Id="42" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="6" Count="1" />
      <LineId Id="85" Count="3" />
      <LineId Id="32" Count="0" />
      <LineId Id="8" Count="2" />
      <LineId Id="131" Count="0" />
      <LineId Id="126" Count="0" />
      <LineId Id="141" Count="0" />
      <LineId Id="130" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="142" Count="0" />
      <LineId Id="157" Count="0" />
      <LineId Id="152" Count="0" />
      <LineId Id="154" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="153" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="11" Count="1" />
      <LineId Id="80" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="79" Count="0" />
      <LineId Id="19" Count="0" />
    </LineIds>
    <LineIds Name="Button.manageLongPress">
      <LineId Id="92" Count="1" />
      <LineId Id="149" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="154" Count="0" />
      <LineId Id="98" Count="4" />
      <LineId Id="104" Count="1" />
      <LineId Id="155" Count="0" />
      <LineId Id="106" Count="4" />
      <LineId Id="112" Count="1" />
      <LineId Id="156" Count="0" />
      <LineId Id="114" Count="4" />
      <LineId Id="120" Count="1" />
      <LineId Id="157" Count="0" />
      <LineId Id="122" Count="1" />
      <LineId Id="153" Count="0" />
      <LineId Id="152" Count="0" />
    </LineIds>
    <LineIds Name="Button.setOutputs">
      <LineId Id="46" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="12" Count="1" />
      <LineId Id="11" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="21" Count="2" />
      <LineId Id="20" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="26" Count="2" />
      <LineId Id="25" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="31" Count="2" />
      <LineId Id="30" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="Button.turnOff">
      <LineId Id="5" Count="1" />
      <LineId Id="13" Count="0" />
      <LineId Id="17" Count="6" />
      <LineId Id="8" Count="1" />
      <LineId Id="25" Count="4" />
      <LineId Id="24" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="32" Count="5" />
      <LineId Id="31" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="44" Count="0" />
    </LineIds>
    <LineIds Name="Button.turnOnDefault">
      <LineId Id="6" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="Button.turnOnStrongestOutput">
      <LineId Id="5" Count="1" />
      <LineId Id="30" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="40" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>